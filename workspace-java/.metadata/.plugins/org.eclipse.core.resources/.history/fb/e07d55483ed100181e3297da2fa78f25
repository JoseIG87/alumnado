package com.tecso.app.web;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.tecso.app.dto.AlumnosYDocentesCurso;
import com.tecso.app.model.Alumno;
import com.tecso.app.model.Curso;
import com.tecso.app.model.InscripcionesCurso;
import com.tecso.app.service.CursoService;

@RestController
@RequestMapping("/cursos")
public class CursoController {

private static final Logger LOG = LoggerFactory.getLogger(AlumnoController.class);
	
	@Autowired
	CursoService servicioCurso;
	
	@RequestMapping(path="/obtenercursos",method=RequestMethod.GET)
	public ResponseEntity<List<Curso>> findAll() {
		
		List<Curso> cursos = servicioCurso.buscarTodosLosCursos();
		if(cursos.isEmpty()) {
			LOG.info("No se encontro cursos");
			return ResponseEntity.notFound().build();
		}
		return new ResponseEntity<List<Curso>>(cursos, HttpStatus.OK);
	}
	
	@RequestMapping(path="/obtenerdatos/{cursoId}",method=RequestMethod.GET)
	public ResponseEntity<AlumnosYDocentesCurso> obtenerAlumnosYDocente(@PathVariable Long cursoId) {
		
		AlumnosYDocentesCurso rta = new AlumnosYDocentesCurso();
		
		Curso curso = servicioCurso.buscarCursoPorId(cursoId);
		if(curso == null) {
			LOG.info("No se ecnontro curso con id: "+cursoId);
			return ResponseEntity.notFound().build();
		}
		
		List<Alumno> listaAlumnos = new ArrayList<Alumno>();
		for(InscripcionesCurso inscripcion : curso.getInscripcionesCurso()) {
			listaAlumnos.add(inscripcion.getIdAlumno());
		}
		
		rta.setNombreCurso(curso.getNombre());
		rta.setListaDeAlumnos(listaAlumnos);
		if(curso.getCursoDocente() != null) {
			rta.setDocenteACargo(curso.getCursoDocente().getIdDocente());
		}
		
		LOG.info("Se obtuvieron los datos del curso correctamente");
		
		return new ResponseEntity<AlumnosYDocentesCurso>(rta, HttpStatus.OK);
	}

}
