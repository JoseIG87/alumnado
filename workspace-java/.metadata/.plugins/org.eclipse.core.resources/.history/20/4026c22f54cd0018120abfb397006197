package com.tecso.app.web;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.tecso.app.dto.AlumnoPersonaDTO;
import com.tecso.app.model.Alumno;
import com.tecso.app.model.Persona;
import com.tecso.app.repository.AlumnoRepository;
import com.tecso.app.repository.PersonaRepository;

@RestController
@RequestMapping("/alumno")
public class AlumnoController {
	
	private static final Logger LOGGER = LoggerFactory.getLogger(AlumnoController.class);
	
	@Autowired
	AlumnoRepository alumnoRepo;
	
	@Autowired
	PersonaRepository personaRepo;
	
	@RequestMapping(value = "/savealumno", method = RequestMethod.POST)
	public ResponseEntity<Void> postCustomer(@RequestBody AlumnoPersonaDTO persona) {
		
		Persona personaGuardar = new Persona();
		Alumno alumnoGuardar = new Alumno();
		
		personaGuardar.setTipoDoc(persona.getTipoDoc());
		personaGuardar.setDocumento(persona.getDocumento());
		personaGuardar.setNombre(persona.getNombre());
		personaGuardar.setApellido(persona.getApellido());
		personaGuardar.setFechaNac(persona.getFechaNac());
		personaGuardar.setDireccion(persona.getDireccion());
		personaRepo.save(personaGuardar);
		
		alumnoGuardar.setIdPersona(personaGuardar);
		alumnoGuardar.setLegajo(persona.getLegajo());
		alumnoRepo.save(alumnoGuardar);
		
		return new ResponseEntity<Void>(HttpStatus.CREATED);
	}
 
	@RequestMapping("/findall")
	public Response findAll() {
 
		Iterable<Customer> customers = repository.findAll();
 
		return new Response("Done", customers);
	}
 
	@RequestMapping("/customer/{id}")
	public Response findCustomerById(@PathVariable("id") long id) {
 
		Customer customer = repository.findOne(id);
 
		return new Response("Done", customer);
	}
 
	@RequestMapping("/findbylastname")
	public Response findByLastName(@RequestParam("lastName") String lastName) {
 
		List<Customer> customers = repository.findByLastName(lastName);
 
		return new Response("Done", customers);
	}

}

